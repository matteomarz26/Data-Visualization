<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>NYC Population Bar Graph</title>
    <style>
        body {
            text-align: center;
            font-family: Arial, sans-serif;
        }
        canvas {
            border: 1px solid black;
            margin-top: 20px;
        }
    </style>
</head>
<body>
    <h2>NYC Population (2010 - 2024)</h2>
    <canvas id="populationChart" width="900" height="500"></canvas>

    <script>
        class BarGraph {
            constructor(data, options = {}) {
                this.data = data;
                this.x = options.x || 50;
                this.y = options.y || 50;
                this.width = options.width || 800;
                this.height = options.height || 400;
                this.barColor = options.barColor || 'blue';
                this.axisColor = options.axisColor || 'black';
                this.labelColor = options.labelColor || 'black';
            }

            draw(context) {
                if (!context) {
                    console.error("Canvas context is not available.");
                    return;
                }

                const years = Object.keys(this.data);
                const populations = Object.values(this.data);

                const maxPopulation = Math.max(...populations);
                const barWidth = this.width / years.length - 5; // Adding spacing between bars

                // Draw axes
                context.strokeStyle = this.axisColor;
                context.lineWidth = 2;
                context.beginPath();
                context.moveTo(this.x, this.y); // Y-axis
                context.lineTo(this.x, this.y + this.height);
                context.lineTo(this.x + this.width, this.y + this.height); // X-axis
                context.stroke();

                // Draw bars
                years.forEach((year, index) => {
                    const barHeight = (populations[index] / maxPopulation) * this.height;
                    const barX = this.x + index * (barWidth + 5);
                    const barY = this.y + this.height - barHeight;

                    // Draw bar
                    context.fillStyle = this.barColor;
                    context.fillRect(barX, barY, barWidth, barHeight);

                    // Draw population labels
                    context.fillStyle = this.labelColor;
                    context.font = "12px Arial";
                    context.textAlign = "center";
                    context.fillText(populations[index].toLocaleString(), barX + barWidth / 2, barY - 5);

                    // Draw year labels
                    context.fillText(year, barX + barWidth / 2, this.y + this.height + 15);
                });
            }
        }

        const nycPopulationData = {
            2010: 8175133,
            2011: 8244910,
            2012: 8325000,
            2013: 8399000,
            2014: 8468000,
            2015: 8538000,
            2016: 8601000,
            2017: 8667000,
            2018: 8398748,
            2019: 8336817,
            2020: 8804190,
            2021: 8700000, // Estimated
            2022: 8500000, // Estimated
            2023: 8300000, // Estimated
            2024: 8097282  // Estimated
        };

        window.onload = function () {
            const canvas = document.getElementById('populationChart');
            if (!canvas) {
                console.error("Canvas element not found.");
                return;
            }

            const context = canvas.getContext('2d');
            if (!context) {
                console.error("Canvas rendering context not found.");
                return;
            }

            const options = {
                x: 50,
                y: 50,
                width: 800,
                height: 400,
                barColor: 'blue',
                axisColor: 'black',
                labelColor: 'black'
            };

            const nycBarGraph = new BarGraph(nycPopulationData, options);
            nycBarGraph.draw(context);
        };
    </script>
</body>
</html>

